{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GUIDE","text":"Swiper Example Learn More Learn More Getting Started Hardware Guide Software Guide Getting Started Hardware Guide Software Guide Contact Us <p>Email: info@galaxea.ai</p>"},{"location":"Guide/A1/Getting_Started/","title":"Getting Started","text":"<p>Congratulations on becoming the proud owner of a Galaxea Robot! We are thrilled to extend a warm welcome to the Galaxea Developer Community. This specially curated guide is designed to introduce beginners to the unique appeal and impressive functionalities of Galaxea Robot. Our goal is to help you quickly get started with us and empower you to explore the full range of possibilities that await you.</p>"},{"location":"Guide/A1/Getting_Started/#getting-started","title":"Getting Started","text":"<p>In this series of step-by-step Galaxea A1 Getting Started tutorials, we will not only lay a solid foundation for using Galaxea A1 but also guide you through the mechanics and performance of each component. Together, we will explore and perform a series of exciting demonstrations to unlock Galaxea A1's amazing advanced features.</p>"},{"location":"Guide/A1/Getting_Started/#before-you-begin","title":"Before You Begin","text":"<p>In this first tutorial, you will learn how to turn on and operate this new product , beginning your journey of interacting with Galaxea A1 Robot Arm.</p>"},{"location":"Guide/A1/Getting_Started/#safety","title":"Safety","text":"<p>To ensure safe use, it is important to remember that Galaxea A1 can cause potential injury if operated improperly. Therefore, we strongly recommend that every user carefully read and follow the instructions in the Safety Guide before operating the robot for the first time to ensure a safe and efficient operation process.</p>"},{"location":"Guide/A1/Getting_Started/#unboxing","title":"Unboxing","text":"<p>Upon opening the package, you will find the robot arm as a fully assembled unit. This means that the arm structure, including all its links and joints, comes pre-assembled and ready for installation. Here\u2019s what you can expect inside the box: </p> Item Quantity Notes Pre-assembled Robot Arm 1 The arm is constructed with all its components integrated, ensuring a straightforward setup process. Power Supply Unit  1 Supplies the electrical power required for the robot arm's operation. Emergency Stop Button 1 Used for immediate power interruption during emergencies Power Cable 1 Used to connect the power supply unit to the robot arm. USB Cable 1 Used to connect the robot arm controller to a computer with a USB 2.0 port.  Mounting Base Plate 1 A flat plate for mounting the robot arm to a stable surface. G-Clip 2 Grating fasteners, used to secure the base plate to the worktable or surface. Mouting Plate Scew M6 4 Used to attach the base plate to the installation surface using the G-clips."},{"location":"Guide/A1/Getting_Started/#installing","title":"Installing","text":"<p>The installation process of Galaxea A1 includes securing the arm to the mounting base to ensure its stability and operating accuracy. The design of the mounting holes allows the arm to be securely mounted on a variety of platforms, providing flexible mounting options.</p> <p>Please select the appropriate installation platform and fixing method according to the operating environment and usage requirements of the arm to ensure its stability and safety during operation.</p>"},{"location":"Guide/A1/Getting_Started/#powering-up","title":"Powering Up","text":"<p>To power up, with the provided power adapter and cable, plug one end of the power adapter cable into the power port on the base of the robot arm, and connect the other end to the power source, ensuring the voltage is 48V.</p>"},{"location":"Guide/A1/Getting_Started/#powering-off","title":"Powering Off","text":"<p>Once the robot arm and control system have completely stopped, you can just unplug the power cable to turn off Galaxea A1.</p> <p>In the current version of Galaxea A1, the motor does not have a brake, so cutting off the power may cause the robotic arm to drop suddenly. We will continue to improve the product to address this issue.</p>"},{"location":"Guide/A1/Getting_Started/#emergency-stop","title":"Emergency Stop","text":"<p>The power supply unit of the robot arm includes an emergency stop switch (E-stop) for immediate power interruption during emergencies. </p> <p>Pressing the E-stop button will instantly disconnect power to the robot arm, ensuring operator safety and preventing damage to the equipment.</p>"},{"location":"Guide/A1/Getting_Started/#getting-help","title":"Getting Help","text":"<p>Should you encounter any issues, need immediate assistance, or find yourself seeking direct dialogue with Galaxea AI's engineering team, do not hesitate to contact us at products@galaxea.ai.</p>"},{"location":"Guide/A1/Getting_Started/#next-step","title":"Next Step","text":"<p>Our quickstart journey has come to an end. To deepen your mastery of A1 Robot Arm, we strongly recommend exploring the following chapters in Galaxea A1 Hardware Guide and Galaxea A1 Software Guide. These resources offer a wealth of additional information and practical examples, guiding you through the intricacies of programming with confidence and ease.</p>"},{"location":"Guide/A1/Hardware_Guide/","title":"Galaxea A1 Hardware Guide","text":"<p>This manual provides engineering data and user guidance for working with Galaxea A1 hardware.</p>"},{"location":"Guide/A1/Hardware_Guide/#safety-guide","title":"Safety Guide","text":"<p>Galaxea robots are potentially dangerous machines with safety hazards. If improperly used, they can cause injury.</p> <ul> <li>All users must carefully read the following safety information before using the robot.</li> <li>Anyone near the robot who has not read this safety information must be closely supervised at all times and made aware that the robot could be dangerous.</li> <li>Only use the robot after inspecting the surrounding environment for potential hazards.</li> </ul> <p>Please refer to the Safety Guide for more information.</p>"},{"location":"Guide/A1/Hardware_Guide/#disclaimer","title":"Disclaimer","text":"<p> Galaxea A1 is intended for research applications by users experienced in operating and programming research robots. This product is not designed for general consumer use in the home and does not have the necessary certifications for such purposes. </p>"},{"location":"Guide/A1/Hardware_Guide/#technical-specification","title":"Technical Specification","text":""},{"location":"Guide/A1/Hardware_Guide/#electric-parameters","title":"Electric Parameters","text":"<p>The electrical parameters of Galaxea A1 include its voltage, current, and communication interface. Its design ensures stable and reliable performance, even in high payload and dynamic applications.</p> Parameters Value Nominal Voltage 48 V Rated Current 30 A Maximum Current 50 A Communication Interface USB 2.0 Port"},{"location":"Guide/A1/Hardware_Guide/#performance-parameters","title":"Performance Parameters","text":"<p>The performance parameters highlight Galaxea A1's key specifications, such as weight, payload capacity, arm reach, and speed, reflecting its superior performance in highly dynamic operations.</p> Performance Value Weight 6 kg Rated Payload 2 kg Maximum Payload 5 kg Reach 700 mm Maximum End-Effector Linear Velocity 10 m/s Maximum End-Effector Acceleration 10 m/s\u00b2 Degree of Freedom 6 Repeatability 1 mm"},{"location":"Guide/A1/Hardware_Guide/#hardware-structure","title":"Hardware Structure","text":""},{"location":"Guide/A1/Hardware_Guide/#robot-structure","title":"Robot Structure","text":""},{"location":"Guide/A1/Hardware_Guide/#joint","title":"Joint","text":"<p>The joint performance parameters detail the operating range, rated torque, and peak torque of the six joints, showcasing the robot's flexibility and power across a variety of operations. </p> Joint Range Rated Torque Joint 1 [-165\u00b0, 165\u00b0] 20 Nm Joint 2 [0\u00b0, 180\u00b0] 20 Nm Joint 3 [0\u00b0, 190\u00b0] 9 Nm Joint 4 [-165\u00b0, 165\u00b0] 3 Nm Joint 5 [-95\u00b0, 95\u00b0] 3 Nm Joint 6 [-105\u00b0, 105\u00b0] 3 Nm <p></p> <ul> <li>View 1: Shows the working radius and rotation angle of Joint 1, with a rotation radius of 715 mm and a maximum rotation angle of 330 degrees.</li> <li>View 2: Displays the rotation ranges for Joint 2 and Joint 3, with a maximum rotation angle of 180 degrees for Joint 2 and 190 degrees for Joint 3.</li> <li>View 3: Illustrates the rotation angles of Joints 4, 5, and 6, as well as the end position of the robot arm. The maximum rotation angle for Joint 4 and 6 is 330 degrees, while Joint 5 has a maximum rotation angle of 190 degrees.</li> </ul>"},{"location":"Guide/A1/Hardware_Guide/#link","title":"Link","text":"<p>Galaxea A1 consists of two main links made from Acrylonitrile Butadiene Styrene (ABS), which is lightweight, rigid and durable. Each joint is equipped with planetary gear motors, enabling independent variable-speed operation with high precision and torque. This design allows the arm to maneuver in any direction commanded by the controller. In the current version, the motor does not have a brake, so cutting off the power may cause the robot arm to drop suddenly. We will continue to improve the product to address this issue. </p> <p>The arm is designed to have:</p> Item Notes Length Deployed 775 mm  Folded 449 mm  Height Deployed 237 mm  Folded 277 mm  Width 128 mm"},{"location":"Guide/A1/Hardware_Guide/#base","title":"Base","text":"<p>Galaxea A1 features two ports on the rear of the base for development and charging.</p> Item Notes Power Port Rated voltage 48 V USB Port USB 2.0 Mounting Holes Four M6 threads with a diameter of 6.3 mm Size 100 mm x 100 mm Maximum End-Effector Linear Velocity 10 m/s"},{"location":"Guide/A1/Hardware_Guide/#end-effector","title":"End-Effector","text":""},{"location":"Guide/A1/Hardware_Guide/#galaxea-g1","title":"Galaxea G1","text":"<p>G1 is composed of one motor, two clips, and one specially designed joint module. </p> <p>Note: No gripper is included with the product. Contact us and purchase end-effectors or customized tools if needed. </p> Feature Value Length 149 mm Length of Fingers 77 mm  Diameter of Motor 60 mm Gripper Operating Range 0~60 mm Gripper Operating Range 100 N"},{"location":"Guide/A1/Hardware_Guide/#attaching","title":"Attaching","text":"<p>Here it shows how to attach gripper to Galaxea A1. To remove them, simply reverse these steps.</p>"},{"location":"Guide/A1/Hardware_Guide/#inspire-robots-rh56-series-dexterous-hand","title":"Inspire-Robots RH56 Series Dexterous Hand","text":"<p>The dexterous hand boasts significant gripping strength and moderate speed, making it suitable for grasping and manipulating tasks in robotics or prosthetic applications. Its combination of power and control allows for effective handling of various objects, similar to the versatility of a human hand, thereby enhancing the functionality of robots or prostheses in performing complex tasks.</p> Feature Value Degrees of Freedom 6 Number of Joints 12 Weight 540 g Repeatability \u00b10.20 mm Max. Finger Grip Force 10 N <p></p>"},{"location":"Guide/A1/Hardware_Guide/#attaching_1","title":"Attaching","text":""},{"location":"Guide/A1/Hardware_Guide/#next-step","title":"Next Step","text":"<p>This concludes the hardware guide for Galaxea A1. For further details, please refer to Galaxea A1 Software Guide.</p>"},{"location":"Guide/A1/Simulation_Isaac_Sim_Usage_Tutorial/","title":"A1 Simulation Isaac Sim Usage Tutorial","text":""},{"location":"Guide/A1/Simulation_Isaac_Sim_Usage_Tutorial/#install-isaac-sim-400","title":"Install Isaac Sim 4.0.0","text":"<p>Isaac Sim has specific requirements for GPU versions and drivers. Arbitrary changes may cause issues. Therefore, it is recommended to directly download and install the necessary files.</p> <p>The download size is approximately 8 GB, so please plan your time accordingly.</p>"},{"location":"Guide/A1/Simulation_Isaac_Sim_Usage_Tutorial/#download-omniverse-launcher","title":"Download Omniverse Launcher","text":"<ol> <li>Visit the page: Go to NVIDIA's official website at https://docs.omniverse.nvidia.com/isaacsim/latest/installation/install_workstation.html and download the Omniverse Launcher.</li> <li>Register an account: During the download process, you may be prompted to log in. If you don't have an NVIDIA account, follow the instructions to register. Once registered, continue with the download.</li> <li>Install Omniverse Launcher: After the download is complete, launch the installer and follow the prompts to complete the installation.</li> <li>Launch Omniverse Launcher: Once the installation is complete, open the Omniverse Launcher. For the first time use, you will need to log in with your registered NVIDIA account.</li> <li>Set up paths: After logging in, the system will prompt you to configure some related file paths. Set them up according to your needs.</li> <li>Install Cache: Follow the system prompts to install Cache. It is recommended to choose the default installation option to enhance your experience.</li> <li>Access the main interface: Once these settings are completed, you will enter the Omniverse Launcher main interface.</li> </ol>"},{"location":"Guide/A1/Simulation_Isaac_Sim_Usage_Tutorial/#install-isaac-sim","title":"Install Isaac Sim","text":"<ol> <li>Open \"Exchange\" : In the Omniverse Launcher main interface, click on the \"Exchange\" tab.</li> <li>Find Isaac Sim: Search the \"Isaac Sim\" application within the \"Exchange\".</li> <li>Select version: Ensure you install version 4.0.0 of Isaac Sim to avoid potential issues with the ROS bridge. Please note that the version number might be hidden in a dropdown menu, so carefully check and select the correct version.</li> <li>Install Isaac Sim: After selecting the version, click the \"Install\" button to begin the installation of Isaac Sim.</li> </ol> <p>Important: The installed applications can be found in the \"Library\" tab. Simply locate the desired application and launch it from there.</p>"},{"location":"Guide/A1/Simulation_Isaac_Sim_Usage_Tutorial/#isaac-sim-basic-operations","title":"Isaac Sim Basic Operations","text":"<p>The following is the official tutorial to help you understand the basic Isaac Sim interface.</p> <ul> <li>UI Interface<ul> <li>https://docs.omniverse.nvidia.com/isaacsim/latest/introductory_tutorials/tutorial_intro_interface.html</li> <li>https://docs.omniverse.nvidia.com/isaacsim/latest/introductory_tutorials/tutorial_intro_workflows.html</li> </ul> </li> <li>Add Objects and Set Physical Properties<ul> <li>https://docs.omniverse.nvidia.com/isaacsim/latest/gui_tutorials/tutorial_intro_simple_objects.html#isaac-sim-app-tutorial-intro-simple-objects</li> </ul> </li> <li>Assemble Robots and Import<ul> <li>https://docs.omniverse.nvidia.com/isaacsim/latest/gui_tutorials/tutorial_gui_simple_robot.html</li> <li>https://docs.omniverse.nvidia.com/isaacsim/latest/features/environment_setup/ext_omni_isaac_urdf.html</li> </ul> </li> </ul>"},{"location":"Guide/A1/Simulation_Isaac_Sim_Usage_Tutorial/#importing-a1-usd-file","title":"Importing A1 USD File","text":"<ol> <li>Open Isaac Sim: Start Isaac Sim 4.0.0 from Omniverse Launcher. Ensure you select <code>omni.isaac.ros_bridge(deprecated)</code> at startup to enable communication between Isaac Sim and ROS nodes.</li> </ol> <ol> <li>Open the USD File: After starting Isaac Sim, select \"File -&gt; Open\". In the file dialog that appears, choose the <code>A1_fixed_base_scene.usd</code> file from the folder. Do not select the A1 simulation raw file <code>A1_raw.usd</code>.</li> </ol> <ol> <li>Run the Synchronization Script: After opening the file, you will see the corresponding scene. Click the \"Play\" button on the left sidebar.</li> </ol> <p>Run the <code>a1_jointsync.py</code> script from the folder to synchronize the RViz simulation with the Isaac Sim simulation.</p> <pre><code>```shell\n  python a1_jointsync.py\n```\n</code></pre> <p>Important: The Isaac Sim ROS Bridge can only publish/subscribe to <code>rostopic</code> when <code>roscore</code> is running.</p>"},{"location":"Guide/A1/Simulation_Isaac_Sim_Usage_Tutorial/#demonstration-example","title":"Demonstration Example","text":"<p>After clicking the Play button, start the <code>python a1_joint_move_sin.py</code> script. A1 robot arm will begin executing a sinusoidal trajectory in joint space, as shown in the image below. You can also play the controller trajectory by running <code>python a1_control_from_traj.py</code>. This will play the trajectory based on the given <code>joint_trajectory.npz</code> data.</p> <p></p> <p>With this, the Isaac Sim A1 robot arm simulation process is complete. You may play the demo in the system with the code provided, like shown below.</p> <p></p>"},{"location":"Guide/A1/Simulation_Isaac_Sim_Usage_Tutorial/#gripping","title":"Gripping","text":"<p>After clicking the \u201cPlay\u201d, please refer to the file \"Joint and End-Effector Motion Interface\" in A1 SDK to complete the simuation process in Isaacsim.</p> <p>Take the following code as an example:</p> <ol> <li> <p>Trace the end pose and position <pre><code>##Initiate the end motion script to start one RViz of the arm. Joint position is on zero-point by default.\ncd release/install\nsource setup.bash\nroslaunch mobiman eeTrackerdemo.launch\n\n##Initiate one terminal,e.g. \"terminal_1\", open the A1 simulation sync.\npython a1_jointsync.py\n\n##Initiate one terminal,e.g. \"terminal_2\", publish the example trajactory ponits.\nrostopic pub /a1_ee_target geometry_msgs/PoseStamped \"{\nheader: {\n    seq: 0,\n    stamp: {secs: 0, nsecs: 0},\n    frame_id: 'world'\n},\npose: {\n    position: {x: 0.08, y: 0.0, z: 0.5},\n    orientation: {x: 0.5, y: 0.5, z: 0.5, w: 0.5}\n}\n}\"\n</code></pre></p> </li> <li> <p>Gripping the object. demo <pre><code>##Initiate the end motion script to start one RViz of the arm. Joint position is on zero-point by default.\ncd release/install\nsource setup.bash\nroslaunch mobiman eeTrackerdemo.launch\n\n##Initiate another terminal,e.g. \"terminal_3\", run the script.\npython mpc_picker.py\n</code></pre></p> </li> <li> <p>Demo Video</p> </li> </ol>    Your browser does not support the video tag."},{"location":"Guide/A1/Software_Guide/","title":"Software Guide","text":"<p>We developed an efficient driver for converting serial signals through the slave computer, which has been released as a ROS (Robot Operating System) topic. This driver not only enables control of the slave computer but also retrieves feedback information and error codes from the device, facilitating two-way communication and real-time control. The tutorials will guide you on how to use this program to develop and operate Galaxea A1.</p>"},{"location":"Guide/A1/Software_Guide/#software-dependency","title":"Software Dependency","text":"<ol> <li>Ubuntu 20.04 LTS</li> <li>ROS Noetic</li> </ol>"},{"location":"Guide/A1/Software_Guide/#installation","title":"Installation","text":"<p>This SDK does not require recompilation. Please refer to the Developing and Operating Tutorials for direct usage instructions.</p>"},{"location":"Guide/A1/Software_Guide/#first-move","title":"First Move","text":"<p><pre><code>cd A1_SDK/install\nsource setup.bash\nroslaunch mobiman eeTrackerdemo.launch\n</code></pre> <pre><code>rostopic pub /a1_ee_target geometry_msgs/PoseStamped \"{\nheader: {\nseq: 0,\nstamp: {secs: 0, nsecs: 0},\nframe_id: 'world'\n},\npose: {\nposition: {x: 0.08, y: 0.0, z: 0.5},\norientation: {x: 0.5, y: 0.5, z: 0.5, w: 0.5}\n}\n}\"\n</code></pre></p>"},{"location":"Guide/A1/Software_Guide/#developing-and-operating-tutorials","title":"Developing and Operating Tutorials","text":""},{"location":"Guide/A1/Software_Guide/#a1-driver-kit","title":"A1 Driver Kit","text":"<ol> <li> <p>For the first use, after confirming the power supply and USB connection, run the following command to modify the read and write permissions of the serial port files: <pre><code>sudo chmod 777 /dev/ttyACM0\n</code></pre></p> </li> <li> <p>After confirming the modification, you can initialize the SDK: <pre><code>cd A1_SDK/install\nsource setup.bash\nroslaunch signal_arm single_arm_node.launch\n</code></pre></p> </li> </ol> <p>The interface section describes the various control and status feedback interfaces for A1 robot arm, helping users understand how to communicate with and control the arm through the ROS package.</p>"},{"location":"Guide/A1/Software_Guide/#driver-interface","title":"Driver Interface","text":"<p>The interface is a ROS package designed for manipulator control and status feedback. This package defines several topics for publishing and subscribing to the robot arm\u2019s status, control commands, and associated error codes. Below are detailed descriptions of each topic and its related message types:</p> Topic Name  Description  Message Type /joint_states_host Robot Arm Joint State Feedback sensor_msgs/JointState /arm_status_host Robot Arm Motor State Feedback signal_arm/arm_status /arm_joint_command_host Robot Arm Control Interface signal_arm/arm_control /gripper_force_control_host Gripper Force Control Interface signal_arm/gripper_joint_command /gripper_position_control_host Gripper Position Control Interface signal_arm/gripper_position_control /gripper_stroke_host Gripper Stroke Feedback Interface sensor_msgs/JointState Topic Name Field Description Data Type Unit Remarks /joint_states_host header Standard ROS Header - - - name Robot Arm Joint Names string[] - - position Robot Arm Joint Positions float64[] rad - velocity Robot Arm Joint Velocities float64[] rad/s - effort Robot Arm Joint Efforts float64[] Nm - /arm_status_host header Standard ROS Header - - - data.name Robot Arm Joint Names string[] - - data.motor_errors.error_code Robot Arm Joint Error Codes float32[] - - data.motor_errors.error_description Robot Arm Joint Error Descriptions float32[] \u00b0C - /arm_joint_command_host header Standard ROS Header - - - p_des Desired Position float32[] rad - v_des Desired Velocity float32[] rad/s - t_ff Desired Torque float32[] Nm - kp Position Proportional Gain float32[] - - kd Position Derivative Gain float32[] - - mode Control Mode uint8 - Default is 0, MIT control /gripper_force_control_host header Standard ROS Header - - - gripper_force Gripper Force float32 N - /gripper_position_control_host header Standard ROS Header - - - gripper_stroke Desired Gripper Stroke float32 mm - /gripper_stroke_host header Standard ROS Header - - - name Gripper Names string[] - - position Gripper Stroke float64[] mm - velocity Gripper Velocity float64[] - - effort Gripper Effort float64[] - -"},{"location":"Guide/A1/Software_Guide/#gripper-control-examples","title":"Gripper Control Examples","text":"<ol> <li>Gripper Force Control Interface</li> </ol> <pre><code># Control the gripper to a specified force\n# Positive gripper_force closes the gripper; negative gripper_force opens it\nrostopic pub /gripper_force_control_host signal_arm/gripper_joint_command \"header:\n  seq: 0\n  stamp:\n    secs: 0\n    nsecs: 0\n  frame_id: ''\ngripper_force: 10.0\"\n</code></pre> <ol> <li>Gripper Position Control Interface</li> </ol> <pre><code># Control the gripper to a specified position, 60 for open, 0 for closed\nrostopic pub /gripper_position_control_host signal_arm/gripper_position_control \"header:\n  seq: 0\n  stamp:\n    secs: 0\n    nsecs: 0\n  frame_id: ''\ngripper_stroke: 40.0\"\n</code></pre>"},{"location":"Guide/A1/Software_Guide/#diagnostic-trouble-code","title":"Diagnostic Trouble Code","text":"<p>DTC is used to feedback the error information of the MCU and the drive,  and can be used to view the real-time status of each motor and the running status of the drive. The following is a detailed description of each fault code and its corresponding status.</p> DTC Status 0 Disabled 1 Disabled 2 Motor Disconnected 3 Position Jump 4 Continuous High Current 5 Excessive Torque 6 ECU -&gt; MCU Timeout 7 Position Limit Exceeded 8 Speed Limit Exceeded 9 Torque Limit Exceeded 10 Overpressure 11 Low pressure 12 Overcurrent 13 MOS Overtemperature 14 Motor Winding Overtemperature 15 Communication loss 16 Overload 17 Serial Connection Disconnected (No Device File) 18 Device File Connected, No Messages 19 Serial Read/Write Failure 20 Feedback Reception Overflow"},{"location":"Guide/A1/Software_Guide/#joint-and-end-effector-movement-control","title":"Joint and End-Effector Movement Control","text":"<p>We provide joint and end-effector movement control interfaces for Galaxea A1, enabling efficient control through the ROS (Robot Operating System) framework. Before performing end-effector or joint movement, you must first activate the <code>signal_arm</code> interface; detailed operation instructions can be found in the  <code>signal_arm</code> documentation. This project includes several primary functions:</p> <ul> <li> <p>End-Effector Pose Movement: Allows users to control the position and orientation of the Galaxea A1's end-effector by publishing target pose messages. This function is suitable for applications requiring precise positioning.</p> </li> <li> <p>End-Effector Trajectory Movement: Facilitates the movement of Galaxea A1's end-effector along a specified trajectory by publishing a series of pose messages. This function is ideal for complex path planning and execution.</p> </li> <li> <p>Joint Angle Movement: Provides a joint-level control interface where users can set the target positions for each individual joint, enabling coordinated whole-arm movements.</p> </li> </ul>"},{"location":"Guide/A1/Software_Guide/#end-effector-pose-movement","title":"End-Effector Pose Movement","text":"<ol> <li>First, initiate the end-effector pose movement script. This will launch an RViz visualization for Galaxea A1, with the default joint positions set to zero. <pre><code>cd A1_SDK/install\nsource setup.bash\nroslaunch mobiman eeTrackerdemo.launch\n</code></pre></li> <li>In the file eeTrackerdemo.launch\uff1a <pre><code>&lt;param name=\"joint_states_topic\" value=\"/joint_states\" /&gt; # the topic /joint_states  represents the channel for acquiring simulated values, specifically the states of the robot's joints, within a simulation environment.\n&lt;param name=\"arm_joint_command_topic\" value=\"/arm_joint_command_host\" /&gt; # the topic /arm_joint_command_host topic represents the channel for issuing commands to the motors.\n</code></pre></li> <li>Publish messages to the end-effector movement topic, specifically named <code>/a1_ee_target</code>. This operation is non-blocking, allowing for continuous message sending and enabling seamless movement of the robot arm's end-effector. However, it's critical that the target endpoint is not too far from the current position of the end-effector to avoid overstraining the mechanics or risking a collision. <pre><code>rostopic pub /a1_ee_target geometry_msgs/PoseStamped \"{\nheader: {\nseq: 0,\nstamp: {secs: 0, nsecs: 0},\nframe_id: 'world'\n},\npose: {\nposition: {x: 0.08, y: 0.0, z: 0.5},\norientation: {x: 0.5, y: 0.5, z: 0.5, w: 0.5}\n}\n}\"\n</code></pre> <pre><code>#!/usr/bin/env python\nimport rospy\nfrom geometry_msgs.msg import PoseStamped\n\ndef publish_pose():\n    rospy.init_node('pose_stamped_publisher', anonymous=True)\n    pose_pub = rospy.Publisher('/a1_ee_target', PoseStamped, queue_size=10)\n    # Create PoseStamped message\n    pose_msg = PoseStamped()\n    pose_msg.header.seq = 0\n    pose_msg.header.stamp = rospy.Time.now()\n    pose_msg.header.frame_id = 'world'\n    pose_msg.pose.position.x = 0.\n    pose_msg.pose.position.y = 0.\n    pose_msg.pose.position.z = 0.\n    pose_msg.pose.orientation.x = 0.\n    pose_msg.pose.orientation.y = 0.\n    pose_msg.pose.orientation.z = 0.\n    pose_msg.pose.orientation.w = 0.\n    # Wait for subscribers to connect\n    rospy.sleep(1)\n    # Publish message\n    pose_pub.publish(pose_msg)\n    rospy.loginfo(\"Published PoseStamped message to /a1_ee_target\")\n\nif __name__ == '__main__':\n    try:\n        publish_pose()\n    except rospy.ROSInterruptException:\n        pass\n</code></pre></li> <li>Usage Example:</li> </ol>    Your browser does not support the video tag."},{"location":"Guide/A1/Software_Guide/#end-effector-trajectory-movement","title":"End-Effector Trajectory Movement","text":"<ol> <li>Firstly, initiate the end-effector trajectory movement script. This will launch an RViz visualization for Galaxea A1, with the default joint positions set to zero. <pre><code>cd A1_SDK/install\nsource setup.bash\nroslaunch mobiman eeTrajTrackerdemo.launch\n</code></pre></li> <li>In the file eeTrajTrackerdemo.launch : <pre><code>&lt;param name=\"joint_states_topic\" value=\"/joint_states\" /&gt; # the /joint_states topic represents the channel for acquiring simulated values, specifically the states of the robot's joints, within a simulation environment.\n&lt;param name=\"joint_command\" value=\"/arm_joint_command_host\" /&gt; #the /arm_joint_command_host topic represents the channel for issuing commands to the motors.\n</code></pre></li> <li>PPublish messages to specify a trajectory for the end-effector movement on the   <code>/arm_target_trajectory</code> topic. This operation is non-blocking, allowing for continuous publishing. Ensure that the trajectory does not deviate significantly from the current end-effector position. It is recommended to wait until the current trajectory is completed before sending the next one to avoid inaccuracies in tracking the desired path. <pre><code>#include &lt;ros/ros.h&gt;\n#include &lt;geometry_msgs/PoseArray.h&gt;\n\ngeometry_msgs::Pose createPose(double x, double y, double z, double w, double ox, double oy, double oz) {\n    geometry_msgs::Pose pose;\n    pose.position.x = x;\n    pose.position.y = y;\n    pose.position.z = z;\n    pose.orientation.w = w;\n    pose.orientation.x = ox;\n    pose.orientation.y = oy;\n    pose.orientation.z = oz;\n    return pose;\n}\n\nint main(int argc, char** argv) {\n    ros::init(argc, argv, \"pose_array_publisher\");\n    ros::NodeHandle nh;\n    ros::Publisher pose_pub = nh.advertise&lt;geometry_msgs::PoseArray&gt;(\"/arm_target_trajectory\", 10);\n\n    // Wait for subscribers to connect\n    ros::Rate wait_rate(10);\n    while (pose_pub.getNumSubscribers() == 0) {\n        wait_rate.sleep();\n    }\n\n    geometry_msgs::PoseArray poseArrayMsg;\n\n    poseArrayMsg.poses.push_back(createPose(0.08, 0.0, 0.3, 0.5, 0.5, 0.5, 0.5));\n    poseArrayMsg.poses.push_back(createPose(0.08, 0.0, 0.4, 0.5, 0.5, 0.5, 0.5));\n    poseArrayMsg.poses.push_back(createPose(0.08, 0.0, 0.54, 0.5, 0.5, 0.5, 0.5));\n\n    pose_pub.publish(poseArrayMsg);\n    ROS_INFO(\"Published PoseArray with 3 poses\");\n\n    return 0;\n}\n</code></pre></li> <li>Usage Example:</li> </ol>    Your browser does not support the video tag."},{"location":"Guide/A1/Software_Guide/#end-effector-pose-movement-interface","title":"End-Effector Pose Movement Interface","text":"Topic Name Description Message Type /a1_ee_target Target pose of end arm joint Geometry_msgs::PoseStamped Topic Name Field Description /a1_ee_target header Standard Header pose.position.x Shift in x direction pose.position.y Shift in y direction pose.position.z Shift in z direction pose.orientation.x Orientation quaternion pose.orientation.y Orientation quaternion pose.orientation.z Orientation quaternion pose.orientation.w Orientation quaternion"},{"location":"Guide/A1/Software_Guide/#joint-angle-movement","title":"Joint Angle Movement","text":"<ol> <li> <p>Firstly, initiate the joint angle movement script. This will launch an RViz visualization for Galaxea A1, with the default joint positions set to zero. <pre><code>cd A1_SDK/install\nsource setup.bash\nroslaunch mobiman jointTrackerdemo.launch\n</code></pre></p> </li> <li> <p>In the file jointTrackerdemo.launch : <pre><code>&lt;param name=\"joint_states_sub_topic\" value=\"/joint_states\" /&gt; # the /joint_states topic represents the channel for acquiring simulated values, specifically the states of the robot's joints, within a simulation environment.\n&lt;param name=\"joint_command\" value=\"/arm_joint_command_host\" /&gt; #the /arm_joint_command_host topic represents the channel for issuing commands to the motors.\n</code></pre> Publish messages for joint movement on the  <code>/arm_joint_target_position</code> topic. This operation is non-blocking, allowing for continuous publishing and enabling uninterrupted movement of the robot arm's joints. <pre><code>import rospy\nfrom sensor_msgs.msg import JointState\n\ndef publish_joint_state():\n    rospy.init_node('joint_state_publisher', anonymous=True)\n    pub = rospy.Publisher('/arm_joint_target_position', JointState, queue_size=10)\n    rate = rospy.Rate(10) # 10 Hz\n    joint_state = JointState()\n    joint_state.header.seq = 0\n    joint_state.header.stamp = rospy.Time.now()\n    joint_state.header.frame_id = 'world'\n    joint_state.name = ['joint1', 'joint2', 'joint3', 'joint4', 'joint5', 'joint6']\n    joint_state.velocity = []\n    joint_state.effort = []\n    # Initialize positions to zeros\n    joint_state.position = [0, 0, 0, 0, 0, 0]\n    steps = 100 # Number of steps\n\nto reach the target position\ntarget_position = [0.5, 0, 0, 0, 0, 0]\nstep_increment = [(target - current) / steps for target, current in zip(target_position, joint_state.position)]\nfor step in range(steps):\n    joint_state.header.stamp = rospy.Time.now() # Update the timestamp\n    joint_state.position = [current + increment for current, increment in zip(joint_state.position, step_increment)]\n    pub.publish(joint_state)\n    rate.sleep()\nrospy.loginfo(\"Published JointState message to /arm_joint_target_position\")\n\nif __name__ == '__main__':\n    try:\n        publish_joint_state()\n    except rospy.ROSInterruptException:\n        pass\n</code></pre></p> </li> </ol>"},{"location":"Guide/A1/Software_Guide/#joint-position-movement-interface","title":"Joint Position Movement Interface","text":"<p>The <code>/joint_move</code> is a ROS package for single-joint control of Galaxea A1. This package allows you to specify the movement of each joint from its current position to a target position, with configurable maximum speed and acceleration. If these parameters are not specified, default values will be used. The default maximum speed is 20 rad/s, and the default maximum acceleration is 20 rad/s\u00b2. The topic names and fields of the movement interface are detailed in the following table.</p> Topic Name Description Message Type /arm_joint_target_position Target position of each joint Sensor_msgs/JointState Topic Name Field Description /arm_joint_target_position header Standard Header name Name of each joint position Target position of each joint velocity Maximum velocity of each joint"},{"location":"Guide/B1/B1_Getting_Started/","title":"Getting Started","text":"<p>Congratulations on becoming the proud owner of Galaxea B1! We are thrilled to extend a warm welcome to the Galaxea Developer Community. This specially curated guide is designed to introduce beginners to the unique appeal and impressive functionalities of Galaxea B1. Our goal is to help you quickly get started with it and empower you to explore the full range of possibilities that await you.</p>"},{"location":"Guide/B1/B1_Getting_Started/#getting-started","title":"Getting Started","text":"<p>In this series of step-by-step Galaxea B1 Getting Started tutorials, we will not only lay a solid foundation for using Galaxea B1 but also guide you through the mechanics and performance of each component. Together, we will explore and perform a series of exciting demonstrations to unlock Galaxea B1's amazing advanced features.</p>"},{"location":"Guide/B1/B1_Getting_Started/#before-you-begin","title":"Before You Begin","text":""},{"location":"Guide/B1/B1_Getting_Started/#safety","title":"Safety","text":"<p>When operating Galaxea B1, please observe the following safety precautions:</p> <ul> <li>After stopping control commands, the device will not stop immediately but will decelerate over a distance. Please ensure that there are no obstacles or interferences in the path.</li> <li>For joystick controller teleoperation, please choose an open area for operation, as the vehicle has no automatic obstacle avoidance sensors. </li> </ul> <p>To ensure safe use, it is important to remember that Galaxea B1 can cause potential injury if operated improperly. Therefore, we strongly recommend that every user carefully read and follow the instructions in the Safety Guide before operating the robot for the first time to ensure a safe and efficient operation process.</p>"},{"location":"Guide/B1/B1_Getting_Started/#turning-on","title":"Turning On","text":"<p>To turn on Galaxea B1, press the boat-shaped button on the left side of the chassis. </p>"},{"location":"Guide/B1/B1_Getting_Started/#charging","title":"Charging","text":"<p>To charge Galaxea B1, please use the provided power cable and insert it into the 48V power supply port located at the bottom of the back of the chassis. </p>"},{"location":"Guide/B1/B1_Getting_Started/#shutting-down","title":"Shutting Down","text":"<p>To shut down Galaxea B1, please press off the button on the back of the chassis. </p>"},{"location":"Guide/B1/B1_Getting_Started/#emergency-stop","title":"Emergency Stop","text":"<p>The emergency stop button is located at the back of the chassis. It can be used to halt all operations in case of an emergency immediately or if you encounter any dangerous situations.</p>"},{"location":"Guide/B1/B1_Getting_Started/#joystick-controller","title":"Joystick Controller","text":"<ul> <li>The joystick controller requires four AA batteries.</li> <li>To turn on/off the controller, please press and hold both power buttons until the touchscreen lights up/off.</li> </ul> <ul> <li>The TX box shows the battery level of the controller.</li> <li>The RX box shows whether the remote control is successfully connected to Galaxea B1. If the connection is successful, it will display a half-filled bar. If the connection is unsuccessful, a question mark will appear in the box.</li> </ul>"},{"location":"Guide/B1/B1_Getting_Started/#motion-mode","title":"Motion Mode","text":"<p>Galaxea B1 is a 6 DoF omni-directional vector chassis, featuring advanced capabilities with Ackerman steering, Translation movement, and Spinning functions.</p>"},{"location":"Guide/B1/B1_Getting_Started/#next-step","title":"Next Step","text":"<p>Our quickstart journey has come to an end. To deepen your mastery of Galaxea B1, we strongly recommend exploring the following chapters in Galaxea B1 Hardware Guide and Galaxea B1 Software Guide.  These resources offer a wealth of additional information and practical examples, guiding you through the intricacies of programming with confidence and ease.</p>"},{"location":"Guide/B1/B1_Hardware_Guide/","title":"Galaxea B1 Hardware Guide","text":"<p>This manual provides engineering data and user guidance for working with the Galaxea B1 hardware.</p>"},{"location":"Guide/B1/B1_Hardware_Guide/#disclaimer","title":"Disclaimer","text":"<p>Galaxea B1 is intended for research applications by users experienced in operating and programming research robots. This product is not designed for general consumer use in the home and does not have the necessary certifications for such purposes. </p>"},{"location":"Guide/B1/B1_Hardware_Guide/#technical-specification","title":"Technical Specification","text":"Mechanical Values Dimensions 477L * 520W * 363H mm Weight 51 kg Wheelbase 381 mm Wheel Track 384 mm Battery Lithium-ion Nominal Voltage 48 V Rated Capacity 30 Ah Power Adapter 273 W Steering Type Four-wheel driving and steering Performance Values Maximum Speed 1 m/s Ground Clearance N/A Maximum Payload 70 kg Control Values Control Mode Teleoperation Computing Unit Command Joystick Controller (2.4G/Maximum Range 1.5km) Communication Interface CAN"},{"location":"Guide/B1/B1_Hardware_Guide/#chassis-operation","title":"Chassis Operation","text":"<p>Galaxea B1 features four steering wheels, each equipped with two steering motors, totaling 8 motors. </p> <p></p> Item Notes Power Button Used to turn on/off the chassis Emergency Stop Button Used for immediate power interruption during emergencies Power Port 2-pin aviation connector with 48 V rated voltage CAN Interface 2-pin aviation connector External Power Outlet 3-pin aviation connector with 48 V rated voltage"},{"location":"Guide/B1/B1_Hardware_Guide/#operation-guide","title":"Operation Guide","text":"<p>The chassis can be controlled and operated using either a Joystick Controller or a Computing Unit.</p> <p>Please ensure all switches (SWA/SWB/SWC/SWD) are in the top position before you do any actions. This will place the machine in a stop state, preventing the chassis from operating. </p> Item Chassis Control Mode Dual Ackermann Mode Spinning Mode Translation Mode Joystick Controller Switches Switch SWB to middle Switch SWC to top Switch SWC to middle Switch SWC to bottom Left Joystick \\ Move up/down to control forward/backward movement Move up/down to control counter-clockwise/clockwise rotation Move up/down to control forward/backward movement Right Joystick \\ Move left/right to control steering angle \\ Move left/right to control left/right turning Computing Unit Switches Switch SWB to bottom and switch SWC to middle Follow the steps in the Development and Operation Tutorials to start the action."},{"location":"Guide/B1/B1_Hardware_Guide/#pc-connection","title":"PC Connection","text":"<p>To achieve efficient data communication and control within the system, we provided a USB-to-CAN Adapter for users to connect the chassis to PC. </p> Item Value Dimensions 7.9L * 2.4W * 1.5H cm USB Speed 2.0 Full Speed 12m/s Receiving Capacity 8500 frames/sec at 1M Baud Rate Detection Yes CAN Interface Screw Terminal Block (CANH+GND+CANL) CAN Baud Rate 5K - 1Mbps PC Interface USB 1.1/2.0/3.0 <p>Please follow the steps:</p> <ol> <li> <p>Use the provided 2-pin aviation connector and cable and connect the USB-to-CAN Adapter to the CAN interface located on the rear of the chassis.</p> </li> <li> <p>Press the boat-shaped power button to turn on the chassis and rotate the emergency stop button clockwise to release it.</p> </li> <li> <p>Verify the wiring of the USB-to-CAN Adapter: red wire to the H port and the black wire to the L port.</p> </li> <li> <p>Use the USB cable and connect the USB-to-CAN Adapter to PC.</p> </li> </ol> <p></p> <p>To check if the CAN connection is functioning correctly, please refer to the CAN Connection in the following chapters.</p>"},{"location":"Guide/B1/B1_Hardware_Guide/#next-step","title":"Next Step","text":"<p>This concludes the hardware information of Galaxea B1. For further coding and interface details, please refer to Galaxea B1 Software Guide.</p>"},{"location":"Guide/B1/B1_Software_Guide/","title":"Software Guide","text":""},{"location":"Guide/B1/B1_Software_Guide/#galaxea-b1-software-guide","title":"Galaxea B1 Software Guide","text":""},{"location":"Guide/B1/B1_Software_Guide/#software-dependency","title":"Software Dependency","text":"<ol> <li>Ubuntu 20.04 LTS</li> <li>ROS Noetic</li> </ol>"},{"location":"Guide/B1/B1_Software_Guide/#installation","title":"Installation","text":"<p>The SDK does not require recompilation. Please refer to the contents below.</p>"},{"location":"Guide/B1/B1_Software_Guide/#can-connection-tutorial","title":"CAN Connection Tutorial","text":"<p>Important: To ensure the USB-to-CAN Adapter works properly on Linux, please install the driver file that matches your system\u2019s kernel version; otherwise, it may cause errors.</p> <p>1. Launch the Driver</p> <p>Use the following command to check the current kernel version:</p> <pre><code>name -r\n</code></pre> <p>The driver file name usually includes the version information. If you need drivers for other kernel versions, please contact us for assistance.</p> Driver File 5.15.0-67-generic: 5.15.0_67.ko 5.15.0-101-generic: 5.15.0_101.ko 5.15.0-102-generic: 5.15.0_102.ko <p>Use the following command to load the kernel module:</p> <pre><code>sudo insmod /usr/lib/modules/$(uname -r)/kernel/drivers/net/can/dev/can-dev.ko\nsudo insmod 5.15.0_101.ko\n</code></pre> <p>2. Set 1M Baud Rate</p> <p>Use the following command to set the CAN interface baud rate to 1 Mbps:</p> <pre><code>sudo ip link set can0 type can bitrate 1000000\n</code></pre> <p>3. Open the CAN Interface</p> <p>Use the following command to bring up the CAN interface:</p> <pre><code>sudo ip link set up can0\n</code></pre> <p>If no errors occurred in the previous steps, use the following commands to check the CAN interface's configuration and status:</p> <pre><code>sudo apt-get install net-tools\nifconfig can0\n</code></pre> <p>4. Install Driver Dependencies</p> <p>Use the following command to install the necessary dependencies for the driver:</p> <pre><code> sudo apt-get install ros-noetic-socketcan-interface ros-noetic-can-msgs\n</code></pre> <p>5. Install and Use can_utils</p> <p>Use the following commands to install the tool and monitor data from Galaxea B1 in real-time, provided that:</p> <ul> <li>B1 is already running, and</li> <li>The CAN-to-USB Adapter is properly connected.</li> <li>Make sure to switch the joystick controller SWB to the bottom and SWC to the middle. Otherwise, <code>candump can0</code> cwill be unable to access the CAN data, and the upper computer will not be able to control the chassis.</li> </ul> <pre><code>sudo apt-get install can_utils\ncandump can0\n</code></pre>"},{"location":"Guide/B1/B1_Software_Guide/#first-move","title":"First Move","text":""},{"location":"Guide/B1/B1_Software_Guide/#launch-the-chassis-node","title":"Launch the Chassis Node","text":"<pre><code>source install/setup.bash\nroslaunch signal_chassis r1.launch   \n</code></pre>"},{"location":"Guide/B1/B1_Software_Guide/#control-the-chassis","title":"Control the Chassis","text":"<pre><code>rostopic pub /control_command signal_chassis/ControlCommand \"header:\n  seq: 0\n  stamp: {secs: 0, nsecs: 0}\n  frame_id: ''\nmotion_mode: 0\nx: 0.5\ny: 0.0\nw: 0.0\"\n</code></pre>"},{"location":"Guide/B1/B1_Software_Guide/#software-interface","title":"Software Interface","text":""},{"location":"Guide/B1/B1_Software_Guide/#driver-interface","title":"Driver Interface","text":"<p>This interface is used for the chassis status feedback ROS package. The package defines multiple topics for posting the status of multiple motors in the chassis. The following are detailed descriptions of each topic and its related message types:</p> Topic Name Description Message Type /hdas/motor_state Chassis motion state feedback chassis_msg/DrivetrainStamped Topic Name Field Description /hdas/motor_state .steering_angle_fl Front-wheel left-wheel steering angle degrees .steering_angle_fr Front-wheel right-wheel steering angle degrees .steering_angle_rl Rear-wheel left-wheel steering angle degrees .steering_angle_rr Rear-wheel right-wheel steering angle degrees .drive_speed_fl Front-wheel left-wheel linear speed m/s .drive_speed_fr Front-wheel right-wheel linear speed m/s .drive_speed_rl Rear-wheel left-wheel linear speed m/s .drive_speed_rr Rear-wheel right-wheel linear speed m/s .drive_angular_speed_fl Front-wheel left-wheel angular speed rad/s .drive_angular_speed_fr Front-wheel right-wheel angular speed rad/s .drive_angular_speed_rl Rear-wheel left-wheel angular speed rad/s .drive_angular_speed_rr Rear-wheel right-wheel angular speed rad/s .motion_mode 0: Dual Ackerman Mode  1: Parallel Mode : Spinning Mode"},{"location":"Guide/B1/B1_Software_Guide/#control-interface","title":"Control Interface","text":"<p>The  chassis control interface can be used to command the chassis to move at  the target speed, which includes the combination of X, Y, and Yaw Rate:</p> Topic Name Description Message Type /control_command Issuing the chassis control signal signal_chassis/ControlCommand.msg Topic Name Field Description /control_command header Standard ROS header .motion_mode 0: Dual Ackerman Mode 1: Transition Mode2: Spinning Mode3: Vector Control Mode4: Breaking Mode .x Not used for Mode 2 &amp; Mode 4; Mode 0: Linear speed of x in the range of (-1, 1) m/sMode 1: Linear speed of x-direction in the range of (-1, 1) m/sMode 3: Linear speed of x-direction in the range of (-1, 1) m/s .y Not used for Mode 0 &amp; Mode 2 &amp; Mode 4Mode 1: Linear speed of y-direction in the range of (-1, 1) m/sMode 3: Linear speed of y-direction in the range of  (-1, 1) m/s  .w Not used for Mode 1 &amp; Mode 4;Motion Mode 0: (-45\u00b0, 45\u00b0) Motion Mode 2: angular speed in the range of (-3.7, 3.7) rad/s Motion Mode 3: angular speed in the range of (-3.7, 3.7) rad/s"},{"location":"Guide/R1/GettingStarted_Before/","title":"Before You Begin","text":"<p>Congratulations on becoming the proud owner of a Galaxea Robot! We are thrilled to extend a warm welcome to the Galaxea Developer Community. This specially curated guide is designed to introduce beginners to the unique appeal and impressive functionalities of Galaxea Robot. Our goal is to help you quickly get started with us and empower you to explore the full range of possibilities that await you.</p>"},{"location":"Guide/R1/GettingStarted_Before/#before-you-begin","title":"Before You Begin","text":"<p>In this first tutorial, you will learn how to power on and operate this new product, beginning your journey of interacting with Galaxea R1.</p>"},{"location":"Guide/R1/GettingStarted_Before/#safety","title":"Safety","text":"<p>Galaxea R1 has the potential to cause harm if not properly used. We recommend that all users review the Safety Guide before operating the robot.</p>"},{"location":"Guide/R1/GettingStarted_Before/#installing","title":"Installing","text":"<p>For detailed instructions on how to install each component of Galaxea R1, please refer to the Connecting and Installing section. These tutorials provide step-by-step guidance to ensure proper assembly and setup.</p>"},{"location":"Guide/R1/GettingStarted_Before/#turning-on","title":"Turning On","text":"<p>To turn on Galaxea R1, please press the boat-shaped button on the side of the chassis. </p>"},{"location":"Guide/R1/GettingStarted_Before/#charging","title":"Charging","text":"<p>To charge Galaxea R1, please use the provided power cable and insert it into the 48V power supply port located at the bottom of the rear of the chassis. </p>"},{"location":"Guide/R1/GettingStarted_Before/#shutting-down","title":"Shutting Down","text":"<p>Galaxea R1 can be turned off by simply switching off the button on the left side of the chassis. </p>"},{"location":"Guide/R1/GettingStarted_Before/#emergency-stop","title":"Emergency Stop","text":"<p>The emergency stop switch is located at the rear of the chassis. It can be used to immediately halt all operations in case of an emergency or if you encounter any dangerous situations.</p>"},{"location":"Guide/R1/GettingStarted_Before/#joystick-controller-instruction","title":"Joystick Controller Instruction","text":"<p>Use the provided joystick controller to operate the robot and quickly test Galaxea R1's various functions.</p> <p></p> Item Notes SWA/SWB/SWC/SWD Used to set Chassis/Torso Control Mode.Each has three positions: up/middle/down. Left Joystick Used to control the movement of the chassis and the torso. Right Joystick Used to control the rotation of the chassis and the pitch/yaw of the torso. Power Button Used to turn on/off the joystick controller."},{"location":"Guide/R1/GettingStarted_Before/#battery-installation","title":"Battery Installation","text":"<ol> <li>Open the battery compartment cover.</li> <li>Insert four fully charged AA batteries into the compartment, ensuring that the metal terminals on the batteries make contact with the metal terminals inside the compartment.</li> <li>Close the battery compartment cover.</li> </ol>"},{"location":"Guide/R1/GettingStarted_Before/#turning-on-the-controller","title":"Turning On the Controller","text":"<p>Check the system status first to ensure that the batteries are fully charged and correctly installed.  Then, press and hold both power buttons on the controller simultaneously until the screen lights up.</p>"},{"location":"Guide/R1/GettingStarted_Before/#touchscreen-operation","title":"Touchscreen Operation","text":"<p>The icon in the top left corner of the screen shows the following:</p> Item Notes TX Shows the battery level of the controller. RX Shows whether the remote control is successfully connected to Galaxea R1. If the connection is successful, it will display a half-filled bar. If the connection is unsuccessful, a question mark will appear in the box."},{"location":"Guide/R1/GettingStarted_Before/#turning-off-the-controller","title":"Turning Off the Controller","text":"<p>Press and hold both power buttons on the controller simultaneously until the screen turns off and the controller shuts down.</p>"},{"location":"Guide/R1/GettingStarted_Before/#teleoperation-guide","title":"Teleoperation Guide","text":""},{"location":"Guide/R1/GettingStarted_Before/#galaxea-r1-chassis-control","title":"Galaxea R1 Chassis Control","text":"<p>There are two ways to control and operate the chassis, using Joystick Controller or Computing Unit.</p> <p>1.Joystick Controller: - Enter Chassis Control Mode: Switch SWB to the middle position. - Left joystick: Move up/down to control the forward/backward movement of the chassis. Move left/right to control the left/right translations of the chassis. - Right joystick: Move left/right to control the rotational speed of the chassis in the yaw direction.</p> <p>2.Computing Unit: - Enter Chassis Control Mode: Switch SWB to the bottom position and switch SWC to the middle position. - Then follow the steps in the Development and Operation Tutorials to start the action.</p>"},{"location":"Guide/R1/GettingStarted_Before/#galaxea-r1-torso-control","title":"Galaxea R1 Torso Control","text":"<p>Important: Before you start, please check if there has been any zero-point drift in torso after long distance transportation. </p> <ul> <li>Connect to the Main Control Board as described in the Connecting and Installing tutorials.</li> <li>Then use the ROS interface below to check whether the current motor position is near <code>[-2.2, 2.6, 0.4, 0]</code> within +/-5%, as the pose shown in the image below.</li> </ul> <p><code>shell  rostopic echo /torso_feedback</code></p> <p></p> <p>If the position is wrong, it means that zero-point drift is observed, and please refer to the Torso Zero-Point Calibration tutorial.</p> <p>Please make sure the torso SDK is enabled first. Then we shall use the joystick controller to operate the torso of Galaxea R1. </p> <ul> <li>Enter Torso Control Mode: Switch SWB and SWC down to the bottom position.</li> <li>Left joystick: Move up/down to control the raising/lowering of the torso.</li> <li>Right joystick: Move up/down to control the positive/negative angular velocity of the torso's pitch angle. Move left/right to control the positive/negative angular velocity of the yaw angle.</li> </ul>"},{"location":"Guide/R1/GettingStarted_Before/#next-step","title":"Next Step","text":"<p>The next guide, Connecting and Installing, will explain how to connect Galaxea R1 to a computing unit and explore its functions in more detail.</p>"},{"location":"Guide/R1/GettingStarted_Connecting/","title":"Connecting and Installing","text":""},{"location":"Guide/R1/GettingStarted_Connecting/#step-1-disassembling-the-covers","title":"Step 1: Disassembling the Covers","text":"<ul> <li>Detach the front shoulder cover: Use the 3 mm hex L-key provided in the package to remove one M4 screw located on each side of the shoulder.</li> <li>Detach the rear shoulder cover: Use the 3 mm hex L-key to remove two hidden M4 screws located on each side of the shoulder.</li> </ul> <ul> <li>Detach the rear chest cover: Use the 4 mm hex L-key provided in the package to remove the two M5 screws on each side of the waist.</li> <li>Detach the front chest cover: Use the 4 mm hex L-key to remove two hidden M5 screws on each side of the waist.</li> </ul>"},{"location":"Guide/R1/GettingStarted_Connecting/#step-2-logging-and-connecting-main-control-board","title":"Step 2: Logging and Connecting Main Control Board","text":"<p>After removing the shoulder and chest covers:</p> <ul> <li>The HDMI cable is located on the right side of the chest for connecting your display device.</li> <li>The USB port is located below the chest for connecting a keyboard and mouse.</li> </ul> <p></p> <ul> <li> <p>The current 'main control board*' of R1 is industrial computer running Linux Ubuntu, with the username <code>r1</code> and the default password <code>1</code>.</p> </li> <li> <p>After connecting to Wi-Fi, you can remotely connect to the R1 via SSH using the command, with <code>192.168.xxx.xxx</code> as its IP address.</p> </li> <li> <p><code>Bash     ssh r1@192.168.xxx.xxx</code></p> </li> <li> <p>When you have finished the above procedures, disconnect the HDMI and USB cables.</p> </li> </ul> <p>'*It is configurable: Industrial Computer/ECU/etc.'</p>"},{"location":"Guide/R1/GettingStarted_Connecting/#step-3-installing-arms","title":"Step 3: Installing Arms","text":"<ul> <li>When installing the robot arm, you must ensure that the arm and the base ports are facing backward.</li> <li>Use the 5 mm hex L-key and four M6 screws to secure the arm.</li> </ul> <ul> <li>Plug the power and USB cables provide with Galaxea A1 arms to the ports on the arm base.</li> </ul>"},{"location":"Guide/R1/GettingStarted_Connecting/#step-4-reattaching-the-covers","title":"Step 4: Reattaching the Covers","text":"<p>After confirming that the communication connection with the robot arms is successful, reattach the covers by reversing the steps in Disassembling the Covers above.</p>"},{"location":"Guide/R1/GettingStarted_Connecting/#next-step","title":"Next Step","text":"<p>Our quickstart journey has come to an end. To deepen your mastery of Galaxea R1, we strongly recommend exploring the following chapters in Galaxea R1 Hardware User Guide and Software User Guide. These resources offer a wealth of additional information and practical examples, guiding you through the intricacies of programming for Galaxea R1 with confidence and ease.</p>"},{"location":"Guide/R1/Hardware_Guide/","title":"Galaxea R1 Hardware Guide","text":""},{"location":"Guide/R1/Hardware_Guide/#disclaimer","title":"Disclaimer","text":"<p>Galaxea R1 is intended for research applications by users experienced in operating and programming research robots. This product is not designed for general consumer use in the home and does not have the necessary certifications for such purposes.</p>"},{"location":"Guide/R1/Hardware_Guide/#technical-specifications","title":"Technical Specifications","text":"Mechanical Values Height 1695 mm when standing878 mm when folded Depth 220 mm for chest625 mm for chassis Width 676 mm Weight 96 kg with battery Nominal Voltage 48 V Rated Capacity 35 Ah Power Supply Lithium-ion Battery Battery Energy 1680 Wh Battery Management System (BMS) Supported Cooling System Low-noise Local Air Cooling Performance Values Degree of Freedom 24 DOF in total6 DOF for chassis4 DOF for torso14 DOF for dual arms with grippers Arm Payload Rated: 2 kg@0.5 mMax.: 5 kg@0.5m Operating Range Vertical: 0 ~ 2000 mm  Horizontal: 700 mm Torso Functions Lift/Tilt/Swivel Function Torso: Lift/Tilt/SwivelChassis: Ackerman/Translation/Spinning Control Values Control Mode Joystick Controller TeleoperationUpper Computer Command Joystick Controller Radio Frequency: 2.4GMax. Remote Range: 1.5 km Communication Interface CAN"},{"location":"Guide/R1/Hardware_Guide/#robot-structure","title":"Robot Structure","text":""},{"location":"Guide/R1/Hardware_Guide/#head","title":"Head","text":"<p>The ZED2 3D + DEPTH Camera is attached to the robot head. It provides high-definition 3D video and neural depth perception of the environment, with a wide field of view and an electronically synchronized rolling shutter, making it an ideal choice for applications requiring precise spatial awareness and real-time 3D mapping.</p>"},{"location":"Guide/R1/Hardware_Guide/#arm","title":"Arm","text":"<p>Galaxea R1 features two Galaxea A1 robot arms. Each arm consists of two main links made from Acrylonitrile Butadiene Styrene (ABS), which is lightweight, rigid and durable. These links are mounted on a base inserted inside the body, and interconnected by six joints. Each joint is equipped with planetary gear motors, enabling independent variable-speed operation with high precision and torque.</p> <p>In the current version of Galaxea A1, the motor does not have a brake, so cutting off the power may cause the robotic arm to drop suddenly. We will continue to improve the product to address this issue.</p> Item Notes Dimensions Deployed: 918L x 128W x 237H mmFolded: 545L x 128W x 277H mm Degree of Freedom 7 Maximum Payload 5 kg Gripper Rated Force 100 N Weight 6 kg <p>See Galaxea A1 User Guide if you want to explore more.</p>"},{"location":"Guide/R1/Hardware_Guide/#torso","title":"Torso","text":"Item Notes Operating Range (Height) 0 ~ 600 mm Waist Movement Space (Yaw) \u00b1170\u00b0 Hip Movement Space (Pitch) \u00b1100\u00b0 Knee Movement Space W1: 0\u00b0~100\u00b0W2: -154\u00b0~145\u00b0 Torso Motor Torque Rated: 100 NMMax.: 200 NM"},{"location":"Guide/R1/Hardware_Guide/#base","title":"Base","text":"<p>The chassis is triangular in shape and equipped with three steering wheels. The power button is on the left side of the chassis and the emergency stop button is at the rear of the chassis.</p> <p>To charge the robot, please use the provided power cable and insert it into the 48 V power supply port located at the bottom of the rear of the chassis.</p> <p></p> Item Notes Dimensions 445L x 476W x 313H mm Power Button Used to turn on/off the robot Emergency Stop Button Used for immediate power interruption during emergencies Power Supply Port Rated voltage 48 V"},{"location":"Guide/R1/Hardware_Guide/#sensors","title":"Sensors","text":"<p>Galaxea R1 includes a number of sensors that allow it to perceive the environment.</p> Sensor Values Camera Head: 1 * Dual CameraWrist: 2 * RGBD CameraChassis: 5 * RGB Camera LiDar 1 * 360\u00b0"},{"location":"Guide/R1/Hardware_Guide/#camera","title":"Camera","text":"Specification  ZED 2  RealSense D435i SENSING SG2-IMX390C-GMSL2-H120H Output Resolution Depth: 1920 x 1080 @30fps Depth: 1280 x 720 @30FPSRGB: 1920*1080 Depth: 1920 x 1080 @30fps Field of View 110\u00b0H x 70\u00b0V x 120\u00b0D 87\u00b0H x 58\u00b0V x 95\u00b0D 118\u00b0H x 62\u00b0V Depth Range 0.3 m ~ 20 m 0.2 m ~ 3 m \\ Dimensions 174.9L x 29.8W x 31.9H mm 90L x 25W x 25H mm 30L x 30W x 22.5H mm Weight 164 g 75 g \uff1c50 g Operating Temp. Range -10 \u00b0C ~ +45\u00b0C 0 ~ +85\u00b0C  -40 ~ +85\u00b0C"},{"location":"Guide/R1/Hardware_Guide/#lidar","title":"LiDAR","text":"<p>LIVOX MID-360 delivers 3D perception in 360 degrees for robots, featuring active anti-interference capabilities and resilience in both bright and low-light environments.</p> Specification Values Basic Computating Capability 14 Core 3.8 GHz CPU Laser Wavelength 905 nm FOV 360\u00b0H x 59\u00b0V Detection Range 40 m @10% Reflectivity70 m @80% Reflectivity Close Proximity Blind Zone 0.1 m Data Port 100 BASE-TX Ethernet IMU Built-in IMU Model Operating Temp. Range -20\u2103 ~ +55\u2103 Dimensions L65 x W65 x H60 mm Weight 265 g"},{"location":"Guide/R1/Hardware_Guide/#computing-unit","title":"Computing Unit","text":"Units Single SOC Dual SOC Basic Computating Capability 8 Core 2.2GHz CPU 2 * 12 Core 2.2GHz CPU Deep Learning Computing Capability 200 Tops 550 Tops Memory 1 x LPDDR5@32G  2 x LPDDR5@64G  Hard Disk 1 x SSD@1T 2 x SSD@512G WiFi Module M.2 Wifi with AP mode M.2 Wifi with AP mode"},{"location":"Guide/R1/Hardware_Guide/#next-step","title":"Next Step","text":"<p>This concludes the hardware guide for Galaxea R1. For further details, please refer to Galaxea R1 Software Guide.</p>"},{"location":"Guide/R1/Software_Guide_Interface/","title":"Software Interface","text":"<p>In this chapter, we describe the various control and status feedback interfaces for Galaxea R1, to help users better understand how to communicate and control the arm through the ROS package.</p>"},{"location":"Guide/R1/Software_Guide_Interface/#driver-interface","title":"Driver Interface","text":"<p>The current Galaxea R1 driver is mainly composed of three parts, including four independent Ros nodes: the drivers of the chassis, the left and right arms, and the torso. The interfaces provided by these drivers are in the form of ROS topics, as described below.</p>"},{"location":"Guide/R1/Software_Guide_Interface/#chassis-driver-interface","title":"Chassis Driver Interface","text":"<p>This interface is used for the chassis status feedback ROS package. The package defines multiple topics for posting the status of multiple motors in the chassis. The following are detailed descriptions of each topic and its related message types:</p> Topic Name Description Message Type /hdas/motor_state Chassis motion status feedback chassis_msg/DrivetrainStamped Topic Name Field Description /hdas/motor_state header Standard ROS header .steering_angle_fl Front wheel left wheel steering angle degrees .steering_angle_fr Front wheel right wheel steering angle degrees .steering_angle_rl Rear wheel left wheel steering angle degrees .steering_angle_rr Rear wheel right wheel steering angle degrees .drive_speed_fl Front wheel left wheel linear speed m/s .drive_speed_fr Front wheel right wheel linear speed m/s .drive_speed_rl Rear wheel left wheel linear speed m/s .drive_speed_rr Rear wheel right wheel linear speed m/s .drive_angular_speed_fl Front wheel left wheel angular speed rad/s .drive_angular_speed_fr Front wheel right wheel angular speed rad/s .drive_angular_speed_rl Rear wheel left wheel angular speed rad/s .drive_angular_speed_rr Rear wheel right wheel angular speed rad/s .motion_mode N/A mode Control mode /gripper_joint_command header Standard header gripper_force Gripper force"},{"location":"Guide/R1/Software_Guide_Interface/#arms-driver-interface","title":"Arms Driver Interface","text":"<p>This interface is used for arm control and status feedback ROS package. The package defines multiple topics for publishing and subscribing to the status of the robot arm, control commands, and associated error code information. The following are detailed descriptions of each topic and its related message types:</p> Topic Name Description Message Type /left_arm/joint_states/right_arm/joint_states Arm joint status feedback sensor_msgs/JointState /left_arm/arm_status/right_arm/arm_status Arm motor status feedback signal_arm/status_stamped /left_arm/arm_joint_command/right_arm/arm_joint_command Arm control interface signal_arm/arm_control /left_arm/gripper_joint_command/right_arm/gripper_joint_command Gripper force control interface signal_arm/gripper_joint_command Topic Name Field Description /left_arm/joint_states/right_arm/joint_states Header Standard header name Name of each arm joint position Position of each arm joint velocity Velocity of each arm joint /left_arm/arm_status/right_arm/arm_status header Standard header status.name Name of each status status.motor_errors Errors of each status /left_arm/arm_joint_command/right_arm/arm_joint_command header Standard header p_des Position command of the arm v_des Velocity command of the arm t_ff Torque command of the arm kp Proportion coefficient of position kd Differential coefficient of position /left_arm/gripper_joint_command/right_arm/gripper_joint_command header Standard header gripper_force Gripper force"},{"location":"Guide/R1/Software_Guide_Interface/#diagnostic-trouble-code","title":"Diagnostic Trouble Code","text":"<p>DTC is used to feedback the error information of the MCU and the driver, and can be used to view the real-time status of each motor and the running status of the driver. The following is a detailed description of each fault code and its corresponding status.</p> DTC Status 0 Disabled 1 Disabled 2 Motor Disconnected 3 Position Jump 4 Continuous High Current 5 Excessive Torque 6 ECU -&gt; ACU Timeout 7 Position Limit Exceeded 8 Speed Limit Exceeded 9 Torque Limit Exceeded 10 Overpressure 11 Low pressure 12 Overcurrent 13 MOS Overtemperature 14 Motor Winding Overtemperature 15 Communication loss 16 Overload 17 Serial Connection Disconnected (No Device File) 18 Device File Connected, No Messages 19 Serial Read/Write Failure 20 Feedback Reception Overflow"},{"location":"Guide/R1/Software_Guide_Interface/#torso-driver-interface","title":"Torso Driver Interface","text":"<p>This interface is used for torso control and status feedback ROS package. The package defines multiple  topics for publishing and subscribing to the status of torso motors and control commands. The following are detailed descriptions of each topic and its related message types:</p> Topic Name Description Message Type /torso_feedback Joint status feedback of the torso motor sensor_msgs/JointState /torso_control Torso motor status feedback signal_arm/arm_control Topic Name Field Description /torso_feedback Header Standard header name Name of each torso joint position Position of each torso joint velocity Velocity of each torso joint effort N/A /torso_control header Standard header p_des Position command of torso v_des Velocity command of torso t_ff N/A kp N/A kd N/A"},{"location":"Guide/R1/Software_Guide_Interface/#operation-control-interface","title":"Operation Control Interface","text":"<p>The current Galaxea R1 operation and control interface is mainly composed of three parts: the chassis, the left and right arms, and the torso. Each drive has different motion interface exposure. The interfaces provided by these drivers are in the form of ROS topics as described below and available to users.</p>"},{"location":"Guide/R1/Software_Guide_Interface/#chassis-control-interface","title":"Chassis Control Interface","text":"<p>The chassis control interface can be used to command the chassis to move at the target speed, which includes the combination of X, Y, and Yaw Rate:</p> Topic Name Description Message Type /cmd_vel Issuing the chassis control signal  geometry_msgs/Twist Topic Name Field Description /cmd_vel header Standard ROS header linear Control of linear speed .x Linear speed of x, range (-1 to 1) m/s .y Linear speed of y, range (-1 to 1) m/s angular Control of yaw rate .z Control of angular speed, -1 to 1 rad/s"},{"location":"Guide/R1/Software_Guide_Interface/#arms-control-interface","title":"Arms Control Interface","text":""},{"location":"Guide/R1/Software_Guide_Interface/#joint-position-movement-interface","title":"Joint Position Movement Interface","text":"<p><code>joint_move</code> is a ROS package for the single-joint control of robot arms and is used to move each joint from the current position to the target position. The maximum speed and maximum acceleration can be specified; if not, the default maximum speed, 20 rad/s, and the default maximum acceleration, 20 rad/s\u00b2, will be used for planning.  The following are detailed descriptions of each topic and its related message types:</p> Topic Name Description Message Type /left_arm/arm_joint_target_position/right_arm/arm_joint_target_position Target position and pose of each arm joint Sensor_msgs/JointState Topic Name Field Description /left_arm/arm_joint_target_position/right_arm/arm_joint_target_position Header Standard header name Name of each arm joint position Position of each arm joint velocity Velocity of each arm joint effort Torque of each arm joints"},{"location":"Guide/R1/Software_Guide_Interface/#end-pose-movement-interface","title":"End Pose Movement Interface","text":"<p><code>eef_move</code>is a ROS package for the end control of robot arms and is used to move the end of the robot arm to the target position with the target pose. </p> <p>Note: If the given position and pose are unreachable, the robot arm will be as close to the target position and pose as possible through the optimization function. When setting the targets, the weight of the position gap is twice the weight of the pose gap.</p> Topic Name Description Message Type /left_arm/arm_target_pose/right_arm/arm_target_pose Target positions of the end of the robot arm Geometry_msgs::PoseStamped Topic Name Field Description /left_arm/arm_target_pose/right_arm/arm_target_pose header Standard header pose.position.x Shift in the X direction pose.position.y Shift in the Y direction pose.position.z Shift in the Z direction pose.orientation.x Orientation quaternion pose.orientation.y Orientation quaternion pose.orientation.z Orientation quaternion pose.orientation.w Orientation quaternion"},{"location":"Guide/R1/Software_Guide_Interface/#end-trajectory-movement-interface","title":"End Trajectory Movement interface","text":"<p><code>eef_follow</code> is a ROS package for the end control of robot arms and is used to move the end following the target trajectory to the target position.</p> <p>Note: If the given position and pose are unreachable, the robot arm will be as close to the target position and pose as possible through the optimization function. When setting the targets, the weight of the position gap is twice the weight of the pose gap.</p> Topic Name Description Message Type /left_arm/arm_target_trajectory/right_arm/arm_target_trajectory Target trajectory of the end of arms Geometry_msgs::PoseArray Topic Name Field Description /left_arm/arm_target_trajectory/right_arm/arm_target_trajectory header Standard header posesgeometry_msgs/Pose[] Description of pose in the BaseLink coordinate system, where each pose has a fixed time interval of 0.1s. pose.position.x Shift in the X direction pose.position.y Shift in the Y direction pose.position.z Shift in the Z direction pose.orientation.x Orientation quaternion pose.orientation.y Orientation quaternion pose.orientation.z Orientation quaternion pose.orientation.w Orientation quaternion"},{"location":"Guide/R1/Software_Guide_Interface/#torso-control-interface","title":"Torso Control Interface","text":"<p>The coordinate system is defined as follows:</p> <ul> <li> <p>The coordinate axes represent the end of the torso.</p> </li> <li> <p>The red, green, and blue lines represent the X, Y, and Z axes, respectively.</p> </li> </ul> <p></p>"},{"location":"Guide/R1/Software_Guide_Interface/#torso-speed-control-interface","title":"Torso Speed Control Interface","text":"<p><code>torso_control</code> is a ROS package for the end control of the torso and is used to move the end of the torso at a target speed.</p> Topic Name Description Message Type /target_torso_speed Issuing the torso control signal geometry_msgs/Twist Topic Name Field Description /cmd_vel header Standard ROS header linear control of linear speed .z linear_speed of z, range (-0.2 to 0.2) m/s angular control of yaw rate .x control of angular speed in pitch direction, -0.5 - 0.5 rad/s .y control of angular speed in pitch direction, -0.5 - 0.5 rad/s"},{"location":"Guide/R1/Software_Guide_Interface/#torso-pose-control-interface","title":"Torso Pose Control Interface","text":"<p><code>torso_control</code> is a ROS package for the end control of the torso and is used to move the pose of the torso to the target height and to the corresponding pitch and yaw. This pose is subject to certain constraints, as described below.</p> Topic Name Description Message Type /torso_target_pose Target pose of end arm joint Geometry_msgs::PoseStamped Topic Name Field Description /torso_target_pose header Standard Header pose.position.x Shift in x-direction in the range of (0,0.25) pose.position.z Shift in z-direction in the range of (0,1) pose.orientation The constraint of -Pitch satisfies sin(pitch) (-x/0.32, (0.25-x)/0.32). The constraint of -Yaw is satisfied with (-3.05-3.05) pose.orientation.x Orientation quaternion pose.orientation.y Orientation quaternion pose.orientation.z Orientation quaternion pose.orientation.w Orientation quaternion"},{"location":"Guide/R1/Software_Guide_Interface/#torso-re-calibration","title":"Torso Re-calibration","text":""},{"location":"Guide/R1/Software_Guide_Interface/#disable-the-auto-start-torso-control-interface","title":"Disable the Auto-start Torso Control Interface","text":"<p>Before performing zero-point calibration, please first disable the auto-start torso control algorithm.</p> <pre><code>   ps aux | grep torso_control \n   ### Find the Torso Control Node PID First\n   kill -9 (PID)\n   ### PID is the found PID\n</code></pre>"},{"location":"Guide/R1/Software_Guide_Interface/#adjust-single-joint-position-control-interface","title":"Adjust Single-joint Position Control Interface","text":"<p>Please proceed with caution during the adjustment and ensure that the delta position of each joint is less than 10 degrees each time. Adjust each Torso joint one at a time, and hold the robot during the adjustment to prevent any potential tipping.</p> <pre><code>rostopic echo /torso_feedback \n## Find Current Torso Feedback Position First, p1, p2, p3, p4 for the current degree\nsource ${SDK_PATH}/install/setup.bash\nrostopic pub /torso_control signal_arm/arm_control \"header:\n  seq: 0\n  stamp: {secs: 0, nsecs: 0}\n  frame_id: ''\np_des: [${p1+delta_p1}, ${p2+delta_p2}, ${p3+delta_p3}, ${p4+delta_p4}]\nv_des: [0.1, 0.1, 0.1, 0.1]\nkp: [0]\nkd: [0]\nt_ff: [0]\nmode: 0\"\n\n### delta_pi is the delta degree wanna each joint to move.\n### delta_p1 &gt; 0 -&gt; T1 Moves Forward \n### delta_p2 &gt; 0 -&gt; T2 Moves Forward \n### delta_p3 &gt; 0 -&gt; T3 Moves Backward \n### delta_p4 &gt; 0 -&gt; T4 Moves anticlockwise \n</code></pre>"},{"location":"Guide/R1/Software_Guide_Interface/#rosservice-call","title":"Rosservice Call","text":"<p>Importance: Hold the robot by hand.</p> <p>Once near the zero-point, you can use the following interface for calibration. The zero-point posture is as shown. When issuing commands, the motor brakes will briefly release, so please hold the robot to prevent calibration errors.</p> <p></p> <pre><code>rosservice call /torso_node/function_frame \"0x03\"\n</code></pre> <ul> <li>Repower the system and check if it is at zero.</li> </ul> <pre><code>rostopic echo /torso_feedback \n### Check Current Torso Feedback Position Check whether calibration succeed \n</code></pre>"},{"location":"Guide/R1/Software_Guide_firstmove/","title":"Software Overview","text":""},{"location":"Guide/R1/Software_Guide_firstmove/#software-dependency","title":"Software Dependency","text":"<ol> <li>Ubuntu 20.04 LTS</li> <li>ROS Noetic</li> </ol>"},{"location":"Guide/R1/Software_Guide_firstmove/#installation","title":"Installation","text":"<p>This SDK does not require recompilation. Please refer to the contents below.</p>"},{"location":"Guide/R1/Software_Guide_firstmove/#first-move","title":"First Move","text":""},{"location":"Guide/R1/Software_Guide_firstmove/#chassis-spins-in-place","title":"Chassis - Spins in place","text":"<pre><code>#Switch SWB to the bottom position and switch SWC to the middle position to enter upper computer chassis control mode.\nrostopic pub /cmd_vel geometry_msgs/Twist \"linear:\n  x: 0.0\n  y: 0.0\n  z: 0.0\nangular:\n  x: 0.0\n  y: 0.0\n  z: 0.1\" \n\n  ### Send This Command to make R1 Spin with Controller \n\n\n  ###Two Way to make it stop\n  rostopic pub /cmd_vel geometry_msgs/Twist \"linear:\n  x: 0.0\n  y: 0.0\n  z: 0.0\nangular:\n  x: 0.0\n  y: 0.0\n  z: 0.0\" \n\n  ### Change SWB / SWC to quit Upper Computer Control mode of chassis\n</code></pre>"},{"location":"Guide/R1/Software_Guide_firstmove/#torso-squat-stand","title":"Torso - Squat &amp; Stand","text":"<p>Controller teleoperation primarily involves using a Python script to map messages from the topic <code>/controller</code> to the topic <code>/target_torso_speed</code>. (<code>/controller</code> is sent by Chassis Control Unit to Control Unit via CAN.) Therefore, the torso is actually controlled by the topic <code>/target_torso_speed</code>. </p> <p>Please follow the following commands:</p> <ol> <li>Quit Torso Control Mode: Switch SWB and SWC to positions other than the bottom to ensure that the topic <code>/controller</code> is NOT published.</li> <li>Move the torso:</li> </ol> <pre><code>##############\nrostopic pub /target_torso_speed geometry_msgs/Twist \"linear:\n  x: 0.0\n  y: 0.0   \n  z: 0.0\nangular:\n  x: 0.0\n  y: 0.1\n  z: 0.0\"\n\n  ###linear.y &gt; 0 means raise the torso \n  ###linear.y &lt; 0 means down the torso\n  ###angular.x &gt; 0 means increase the pitch and &lt;0 means decrease the pitch\n  ###angular.y &gt; 0 means anti-clockwise the wrist and &lt; 0 means clockwise the wrist\n</code></pre> <ol> <li>Stop the torso:</li> </ol> <pre><code>##############\nrostopic pub /target_torso_speed geometry_msgs/Twist \"linear:\n  x: 0.0\n  y: 0.0   \n  z: 0.0\nangular:\n  x: 0.0\n  y: 0.0\n  z: 0.0\"\n\n  ###linear.y &gt; 0 means raise the torso \n  ###linear.y &lt; 0 means down the torso\n  ###angular.x &gt; 0 means increase the pitch and &lt;0 means decrease the pitch\n  ###angular.y &gt; 0 means anti-clockwise the wrist and &lt; 0 means clockwise the wrist\n</code></pre>"},{"location":"Guide/R1/Software_Guide_firstmove/#arm-wave-salute","title":"Arm - Wave &amp; Salute","text":"<p>Since the arm control is complex and cannot be managed with just two joysticks, we have stored a preset trajectory in the Galaxea R1's Control Unit in the format of rosbag.</p> <p>Before operating arms, ensure that the pose is as shown below, especially for joints 4, 5, and 6 of both arms. Since the arm remains stationary when powered on, you can turn it off to manually adjust the arm's pose.</p> <p></p> <p>Use the command below to first make the arm wave and then perform a salute.</p> <pre><code>rosbag play ~/Downloads/test_wave_salute.bag\n</code></pre>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/","title":"Getting Started","text":"<p>In this first tutorial, you will learn how to power on and operate this new product, beginning your journey of interacting with Galaxea R1.</p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#before-you-begin","title":"Before You Begin","text":""},{"location":"Guide/R1/assets/R1%20Getting%20Started/#safety","title":"Safety","text":"<p>Galaxea R1 has the potential to cause harm if not properly used. We recommend that all users review the Safety Guide before operating the robot.</p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#unboxing","title":"Unboxing","text":""},{"location":"Guide/R1/assets/R1%20Getting%20Started/#installing","title":"Installing","text":""},{"location":"Guide/R1/assets/R1%20Getting%20Started/#turning-on","title":"Turning On","text":"<p>To turn on Galaxea R1, press the boat-shaped switch on the side of the chassis. Pressing the switch will distribute 48V DC power to the various modules of the R1, completing the startup.</p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#charging","title":"Charging","text":"<p>Galaxea R1 is powered by two 12V AGM SLA batteries that provide a combined 18AH of capacity and provides a charging interface. Before starting, ensure that all packing materials have been removed from the robot and that the area around the robot is clear of furniture or obstacles.</p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#shutting-down","title":"Shutting Down","text":"<p>Galaxea R1 can be turned off by simply switching off the button on the side of the chassis. The motors in the R1 arms have brakes, so the arms will stay in place when power is cut.</p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#emergency-stop","title":"Emergency Stop","text":"<p>The emergency stop switch is located at the rear of the chassis. It can be used to immediately halt all operations in case of an emergency or if you encounter any dangerous situations.</p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#joystick-controller","title":"Joystick Controller","text":""},{"location":"Guide/R1/assets/R1%20Getting%20Started/#instruction","title":"Instruction","text":"Item Notes SWA/SWB/SWC/SWD Used to set Chassis/Torso Control Mode.Each has three positions: up/middle/down. Left Joystick Used to control the movement of the chassis and the torso. Right Joystick Used to control the rotation of the chassis and the pitch/yaw of the torso. Power Button Used to turn on/off the joystick controller."},{"location":"Guide/R1/assets/R1%20Getting%20Started/#battery-installation","title":"Battery Installation","text":"<ol> <li>Open the battery compartment cover.</li> <li> <p>Insert four fully charged AA batteries into the compartment, ensuring that the metal terminals on the batteries make contact with the metal terminals inside the compartment.</p> </li> <li> <p>Close the battery compartment cover.</p> </li> </ol> <p></p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#turning-on-the-controller","title":"Turning On the Controller","text":"<p>Please follow these steps to power on:</p> <ol> <li>Check the system status to ensure:</li> <li>The batteries are fully charged and correctly installed.</li> <li> <p>Galaxea R1 is powered on and turned on, which will also power on the built-in receiver.</p> </li> <li> <p>Press and hold both power buttons on the controller simultaneously until the screen lights up.</p> </li> </ol>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#touchscreen","title":"Touchscreen","text":"<p>The icon in the top left corner of the screen shows the following:</p> Item Notes TX Shows the battery level of the controller. RX Shows whether the remote control is successfully connected to R1. If the connection is successful, it will display a half-filled bar. If the connection is unsuccessful, a question mark will appear in the box. <p></p> <p>Use the provided joystick controller to operate the robot and quickly test R1 Robot's various functions.</p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#turning-off-the-controller","title":"Turning Off the Controller","text":"<p>Press and hold both power buttons on the controller simultaneously until the screen turns off and the controller shuts down.</p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#teleoperation-guide","title":"Teleoperation Guide","text":""},{"location":"Guide/R1/assets/R1%20Getting%20Started/#galaxea-r1-chassis-control","title":"Galaxea R1 Chassis Control","text":"<p>Add a video </p> <p>There are two ways to control and operate the chassis, using Joystick Controller or upper computer.</p> <ol> <li>Joystick Controller\uff1a</li> </ol> <p>First, Switch SWB to the middle position to enter Chassis Control Mode.</p> <ul> <li> <p>Left joystick: Move up and down to control the forward and backward movement of the chassis. Move left and right to control the left and right translations of the chassis.</p> </li> <li> <p>Right joystick: Move left and right to control the rotational speed of the chassis in the yaw direction.</p> </li> <li> <p>Upper Computer:</p> </li> <li>Switch SWB to the bottom position and switch SWC to the middle position to enter upper computer chassis control mode. Then follow the steps in the Development and Operation Tutorials to start the action.</li> </ul>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#galaxea-r1-torso-control","title":"Galaxea R1 Torso Control","text":"<p>Important: Upon first startup, please check if there has been any zero-point drift in torso during long distance transportation. </p> <ul> <li>First, connect to the Main Control Board as described in the Connecting and Installing tutorials.. </li> <li> <p>Then, use the ROS interface below to check whether the current motor position is near [-2.2, 2.6, 0.4, 0] within +/-5%, as R1's pose shown in the image below. </p> </li> <li> <p><code>Bash     rostopic echo /torso_feedback</code></p> </li> </ul> <p></p> <p>If the position is wrong, it means that zero-point drift is observed, and please refer to the Torso Zero-Point Calibration tutorial to perform calibration for the torso motors, and then proceed with using the controller.</p> <p>Use the joystick controller to control and operate the robot's torso. First, ensure that the torso SDK is enabled before proceeding. Then, switch SWB and SWC to the bottom position to enter Torso Control Mode.</p> <ol> <li>Left joystick: Move up and down to control the raising and lowering of the torso. </li> <li>Right joystick: Move up (positive) and down (negative) to control the angular velocity of the torso's pitch angle. Move left (positive) and right (negative) to control the angular velocity of the yaw angle of R1.</li> </ol>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#next-step","title":"Next Step","text":"<p>The next guide, Connecting, will explain how to connect Galaxea R1 to upper computer to explore its functions in more detail. We recommend all new users complete the Getting Started series before beginning to develop with the robot.</p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#connecting","title":"Connecting","text":""},{"location":"Guide/R1/assets/R1%20Getting%20Started/#step-1-disassembling-the-covers","title":"Step 1: Disassembling the Covers","text":""},{"location":"Guide/R1/assets/R1%20Getting%20Started/#remove-the-shoulder-covers","title":"Remove the Shoulder Covers","text":"<ul> <li>Use the hex L-key (3 mm) provided in the package to remove the M4 screws located on the robot's shoulders, with one screw on each side. Then, the rear shoulder cover can be detached.</li> <li>After removing the front cover, you will see two M4 screws on each side of the neck. Use the hex L-key (3 mm) to remove these screws, and then you can detach the rear shoulder cover.</li> </ul>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#remove-the-chest-covers","title":"Remove the Chest Covers","text":"<ul> <li>Use the provided hex key (4 mm) provided to remove the M5 screws from both sides of the chest covers, two screws on each side. Then, you can detach the rear chest cover.</li> <li>After removing the rear cover, you will see two M5 screws on each side of the robot's waist. Use the hex key (4 mm) to remove these screws, and then you can detach the front chest cover.</li> </ul>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#step-2-logging-and-connecting-main-control-board","title":"Step 2: Logging and Connecting Main Control Board","text":"<p>After removing the robot's shoulder and chest covers:</p> <ul> <li>On the right side of the robot\u2019s arm, there is a reserved HDMI cable connector for connecting your display.</li> <li>Below the robot\u2019s chest cavity, there is a reserved USB port for connecting a keyboard and mouse.</li> </ul> <p></p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#connecting_1","title":"Connecting","text":"<ul> <li> <p>The current main control board of R1 is an industrial computer running Linux Ubuntu, with the username <code>r1</code> and the default password <code>1</code>.</p> </li> <li> <p>After connecting to Wi-Fi, you can remotely connect to the R1 via SSH using the command, with <code>192.168.xxx.xxx</code> as its IP address.</p> </li> <li> <p><code>Bash     ssh r1@192.168.xxx.xxx</code></p> </li> </ul>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#post-configuration","title":"Post-Configuration","text":"<ul> <li>After logging into and configuring the main unit, disconnect the HDMI cable and the USB keyboard and mouse cables.</li> <li>Reinstall the robot arms on both sides and reattach the covers.</li> </ul>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#step-3-installing-arms","title":"Step 3: Installing Arms","text":""},{"location":"Guide/R1/assets/R1%20Getting%20Started/#install-the-left-and-right-arms","title":"Install the left and right arms","text":"<ul> <li>When installing the robot arm, ensure that the arm and the base ports are facing backward.</li> <li>Use the hex L-key (5 mm) and four M6 screws to secure the arm.</li> </ul>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#connect-the-cables","title":"Connect the cables","text":"<ul> <li>Connect the power and USB 2.0 cables for both robot arms. The connectors are pre-reserved; simply plug them in.</li> </ul>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#step-4-reattaching-the-covers","title":"Step 4: Reattaching the Covers","text":"<p>After verifying connection with the robot is , reattach the covers to complete the installation.</p> <p>After confirming that the communication connection with the robot arms is successful, reattach the covers by reversing the disassembly steps above to complete the installation.</p>"},{"location":"Guide/R1/assets/R1%20Getting%20Started/#next-step_1","title":"Next Step","text":"<p>Our quickstart journey has come to an end. To deepen your mastery of Galaxea R1, we strongly recommend exploring the following chapters, particularly the Development and Operation Tutorials. These resources offer a wealth of additional information and practical examples, guiding you through the intricacies of programming for Galaxea R1 with confidence and ease.</p>"},{"location":"Guide/Tabletop_Teleopration/Tabletop_Teleopration/","title":"Tabletop Teleopration","text":""},{"location":"Guide/Tabletop_Teleopration/Tabletop_Teleopration/#technical-specification","title":"Technical Specification","text":"Item Values Dimensions 1770L * 761W * 1051H Leader Arms 2 * Galaxea A1 + 2 * Galaxea G1-T Follower Arms 2 * Galaxea A1 + 2 * Galaxea G1 Camera 4 * Intel RealSense D435i Base 100 mm x 100 mm Charging Port Rated voltage 48V USB Port USB 2.0"},{"location":"Guide/Tabletop_Teleopration/Tabletop_Teleopration/#technical-drawing","title":"Technical Drawing","text":""},{"location":"Guide/Tabletop_Teleopration/Tabletop_Teleopration/#camera-setting","title":"Camera Setting","text":"<p>Important: please use the M3*10 mounting screws to secure the camera holder on the arm. </p> <p>If you need structural files, please visit our Tabletop Teleoperation STP repository to access the resources.</p>"},{"location":"Introducing_Galaxea_Robot/introduction/","title":"Galaxea Robot","text":""},{"location":"Introducing_Galaxea_Robot/introduction/#ultra-light-highly-dynamic","title":"Ultra-Light &amp; Highly Dynamic","text":"<p>A1 is an Ultra-Light Force-Controlled robot arm,  distinguished by its exceptional dynamism and significant high payload capacity.  This cutting-edge technology makes it an optimal choice for sophisticated applications that require nuanced interactions,  thanks to its outstanding electrical performance, robust handling capabilities, and versatile jointed structure.</p> <p>The arm's superior high-speed operation, paired with its precise force control,  enables unparalleled performance in a multitude of tasks, from delicate assembly operations to demanding research experiments.  Its articulate design ensures adaptability across a broad range of motions,  making it a versatile tool for industries seeking automation with finesse.</p>"},{"location":"Introducing_Galaxea_Robot/introduction/#key-features","title":"Key Features","text":""},{"location":"Introducing_Galaxea_Robot/introduction/#discover-more","title":"Discover More","text":"<p>If you wish to learn more about the hardware and software specifics of A1 robotic arm,  please refer to the Galaxea  A1 Guide for detailed information.</p> <p>The manual will provide you with comprehensive insights into the technical specifications,  operational guidelines, and system requirements that will help you understand and utilize A1 to its fullest potential.</p>"},{"location":"Introducing_Galaxea_Robot/product_info/A1/","title":"A1 Robot Arm","text":""},{"location":"Introducing_Galaxea_Robot/product_info/A1/#high-dynamics-large-payload","title":"High Dynamics &amp; Large Payload","text":"<p>Galaxea A1 is a lightweight force-controlled robot arm known for its exceptional dynamism and significant high payload capacity. This cutting-edge technology makes it the optimal choice for sophisticated applications that demand nuanced interactions, owing to its outstanding electrical performance, robust handling capabilities, and versatile jointed structure.</p> <p>It's superior high-speed operation, combined with precise force control, enables unparalleled performance across a variety of tasks, from delicate assembly operations to demanding research experiments. Its articulate design ensures adaptability across a broad range of motions, making it a versatile tool for industries seeking automation with finesse. </p>"},{"location":"Introducing_Galaxea_Robot/product_info/A1/#key-hardware-features","title":"Key Hardware Features","text":""},{"location":"Introducing_Galaxea_Robot/product_info/A1/#advanced-accessories","title":"Advanced Accessories","text":"<p>Discover the superior performance and innovative features of our accessories designed to optimize your Galaxea A1's capabilities.</p> Galaxea G1 Inspire-Robots RH56 Series Dexterous Hand"},{"location":"Introducing_Galaxea_Robot/product_info/A1/#ready-for-ai-development","title":"Ready for AI Development","text":"<p>Imitation Learning - Tabletop Teleoperation</p>"},{"location":"Introducing_Galaxea_Robot/product_info/A1/#discover-more","title":"Discover More","text":"<p>If you wish to learn more about the hardware and software specifics of Galaxea A1, please refer to the Galaxea A1 User Guide for detailed information.</p> <p>The manual will provide you with comprehensive insights into the technical specifications, operational guidelines, and system requirements that will help you understand and utilize Galaxea A1 to its fullest potential.</p>"},{"location":"Introducing_Galaxea_Robot/product_info/A1_accessory_G1/","title":"Gripper","text":""},{"location":"Introducing_Galaxea_Robot/product_info/A1_accessory_G1/#advanced-performance-versatility","title":"Advanced Performance &amp; Versatility","text":"<p>Our high-precision Galaxea G1 is designed for robust and versatile gripping solutions, making it ideal for various industrial applications. With its advanced mechanics and reliable performance, this gripper ensures secure handling and adaptability in diverse environments.</p> <ul> <li>High Gripping Force</li> <li>Linear Movement</li> </ul> <p> </p>"},{"location":"Introducing_Galaxea_Robot/product_info/A1_accessory_G1/#comparison-with-others","title":"Comparison with Others","text":""},{"location":"Introducing_Galaxea_Robot/product_info/Dexterous_Hands/","title":"Dexterous Hand","text":""},{"location":"Introducing_Galaxea_Robot/product_info/Dexterous_Hands/#more-powerful","title":"More Powerful","text":"<p>The Dexterous Hand RH56DFX series by Inspire-Robots has 6 DOF and 12 motion joints, combined with a force-position hybrid control algorithm to achieve sub-millimeter repeatability and the ability to handle loads of several kilograms. These hands can precisely simulate human hand grasping actions. The series supports the ROS system and provides corresponding ROS plug-ins for easy integration and use. </p> <ul> <li>Large Grip Force</li> <li>Moderate Speed</li> <li>Integrated Force Sensor</li> </ul>"},{"location":"Introducing_Galaxea_Robot/product_info/Dexterous_Hands/#specification","title":"Specification","text":"Features Value Degree of Freedom 6 Number of Joints 12 Weight 540 g Operating Voltage DC24V \u00b1 10% Quiescent Current 0.2A Repeatability \u00b10.2 mm Max. Thumb Grip 15 N Max. Palm Finger Force 100 N Force Resolution 0.5 N Thumb Lateral Rotation Range \uff1e 65\u00b0 Thumb Lateral Rotation Speed 107 \u00b0/s Thumb Bend speed 70 \u00b0/s Palm Finger Bend Speed 260 \u00b0/s"},{"location":"Introducing_Galaxea_Robot/product_info/R1/","title":"R1 Robot","text":""},{"location":"Introducing_Galaxea_Robot/product_info/R1/#wide-operating-range-high-flexibility","title":"Wide Operating Range &amp; High Flexibility","text":"<p>Galaxea R1 is a full-size humanoid robot with a wide operating range of up to 2 m and an 80 cm operating radius.  It is fitted with 6-DoF dual lightweight and highly dynamic Galaxea A1 robot arms,  a 4-DoF torso that supports lift, pitch, and roll,  and a three-wheel driving and steering Galaxea B1 chassis,  ensuring exceptional maneuverability and adaptability across diverse operational environments. </p>"},{"location":"Introducing_Galaxea_Robot/product_info/R1/#key-hardware-features","title":"Key Hardware Features","text":""},{"location":"Introducing_Galaxea_Robot/product_info/R1/#configuration-options","title":"Configuration Options","text":"Feature/Specification Galaxea R1 Galaxea R1 Pro Operating Range (Height) 0 ~ 200 cm 0 ~ 200 cm Operating Radius 80 cm 80 cm Max. Payload 5 kg 5 kg Degree of Freedom 6 DOF for chassis4 DOF for torso14 DOF for dual arms 6 DOF for chassis4 DOF for torso14 DOF for dual arms Torso Functions \u2705 Lift\u2705 Tilt\u2705 Swivel \u2705 Lift\u2705 Tilt\u2705 Swivel Chassis Functions \u2705 Ackerman\u2705 Translation\u2705 Spinning \u2705 Ackerman\u2705 Translation\u2705 Spinning Camera \u2705 Head: 1 \u2705 Head: 1\u2705 Chassis: 4 LiDAR Optional \u2705 Obstacle Avoidance \\ \u2705 Advanced Navigation \\ \u2705 Computing Unit Standard Enhanced Applicability Suitable for applications requiring basic operation and flexibility, offering comprehensive motion control and adaptability. Ideal for advanced applications needing higher environmental awareness and visual processing, enhancing the robot\u2019s perception and navigation capabilities."},{"location":"Introducing_Galaxea_Robot/product_info/R1/#ready-for-ai-development","title":"Ready for AI Development","text":"<p>Use Case</p>"},{"location":"Introducing_Galaxea_Robot/product_info/R1/#discover-more","title":"Discover More","text":"<p>If you wish to learn more about the hardware and software specifics of Galaxea R1, please refer to the Galaxea  R1 User Guide for detailed information.</p> <p>The manual will provide you with comprehensive insights into the technical specifications, operational guidelines, and system requirements that will help you understand and utilize Galaxea R1 to its fullest potential.</p>"},{"location":"Introducing_Galaxea_Robot/product_info/The%20Dexterous%20Hands/","title":"ACCESSORIES","text":""},{"location":"Introducing_Galaxea_Robot/product_info/The%20Dexterous%20Hands/#more-powerful","title":"More Powerful","text":"<p>The Dexterous Hand RH56DFX series by Inspire-Robots has 6 DOF and 12 motion joints, combined with a force-position hybrid control algorithm to achieve sub-millimeter repeatability and the ability to handle loads of several kilograms. These hands can precisely simulate human hand grasping actions. The series supports the ROS system and provides corresponding ROS plug-ins for easy integration and use. </p> <ul> <li>Large Grip Force</li> <li>Moderate Speed</li> <li>Integrated Force Sensor</li> </ul>"},{"location":"Introducing_Galaxea_Robot/product_info/The%20Dexterous%20Hands/#specification","title":"Specification","text":"Features Value Degree of Freedom 6 Number of Joints 12 Weight 540 g Operating Voltage DC24V \u00b1 10% Quiescent Current 0.2A Repeatability \u00b10.2 mm Max. Thumb Grip 15 N Max. Palm Finger Force 100 N Force Resolution 0.5 N Thumb Lateral Rotation Range \uff1e 65\u00b0 Thumb Lateral Rotation Speed 107 \u00b0/s Thumb Bend speed 70 \u00b0/s Palm Finger Bend Speed 260 \u00b0/s"},{"location":"Introducing_Galaxea_Robot/product_info/X1/","title":"X1","text":""},{"location":"Introducing_Galaxea_Robot/product_info/X1/#product-infromation","title":"Product Infromation","text":"<p> X1 is an omni-directional mobility vector control chassis.  It is ideal for complex applications with embodied intelligence with its excellent high load capacity and flexible articulated design.  Its superior high-speed operation ensures guaranteed excellence in research environments.</p>"},{"location":"Introducing_Galaxea_Robot/product_info/X1/#omni-directional-moving","title":"Omni-directional moving","text":"Your browser does not support the video tag."},{"location":"Introducing_Galaxea_Robot/product_info/X1/#vector-controlled-chassis","title":"Vector-controlled chassis","text":"Your browser does not support the video tag."},{"location":"Introducing_Galaxea_Robot/product_info/X1/#technical-specification","title":"Technical Specification","text":""},{"location":"Introducing_Galaxea_Robot/product_info/X1/#our-solutions","title":"Our Solutions","text":""},{"location":"about_us/about_us/","title":"About us","text":"<p>Galaxea AI is an artificial intelligence company that focuses on building \"One Brain, Multiple Types\" of embodied intelligent robots.  We have completed the full-stack self-research from the body ontology, end-to-end algorithm, scene landing and solution.  The core team not only gathers world-class scientists in embodied intelligence perception and operation algorithms,  but also possesses rich cutting-edge technology product landing ability and valuable experience in mass production of autonomous driving.  Galaxea AI's vision is to create a new quality of robot productivity in the era of artificial intelligence.</p>"}]}